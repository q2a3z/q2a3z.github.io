[{"content":"プロファイルに説明しました。一度Bloggerで多言語の記事をしたいんですが、書き方面倒だ思うので、代わりにHugoで書きます。\n最初書いたの記事をここに移転して、テストします。\nBlogger vs WordPress BloggerはGoogleが提供しているブログのサイトです。BloggerはGoogle広告を使えて、テーマを変更して、そしてJavaScriptを導入できます。WordPressは二種類があります。一つは無料で使えるんですが、サイトとドメインが自分で準備しないと使えないのWrodPress.org。その反対でサイトとドメインが自分で準備しなくても使えるんですが、有料プランしかテーマやプラグインを使えないのWrodPress.comです。\n\rテーマ:\rWrodPressに翻訳対応テーマ\r\r\rPolylang:\rWrodPress.orgに翻訳対応プラグイン\r\r\r兩者比較\n   タイトル Blogger WordPress.com WordPress.org     費用 無料 無料*(その他機能、有料プランしか使える) 無料   サイト、ドメイン 必要ない 必要ない 必要   多言語 JavaScriptでできる テーマやプラグインを導入*(有料プラン) テーマやプラグインを導入    前に言いました、先にBloggerを使って、今後何の必要があれば、WordPressを使います。\nBloggerに多言語を導入 1.コンテンツ設定 1.1ボタン設定 下記のHTMLで黄色のボタンを設置して、toggle ボタンを使っています。\n日本語 | 正體中文\n1 2 3 4 5 6 7 8 9  \u0026lt;a class=\u0026#34;lang-switch-button\u0026#34; href=\u0026#34;#\u0026#34; onclick=\u0026#34;$(\u0026amp;quot;.lang-jp\u0026amp;quot;).toggle(); $(\u0026amp;quot;.lang-tw\u0026amp;quot;).toggle();\u0026#34; style=\u0026#34;background-color: #ee9900; border-radius: 5px; color: white; font-weight: bold; padding: 5px 8px;\u0026#34;\u0026gt; 日本語 | 正體中文\u0026lt;/a\u0026gt;  \n1 2 3 4 5 6 7 8 9 10  \u0026lt;div class=\u0026#34;lang-tw\u0026#34; style=\u0026#34;display: none;\u0026#34;\u0026gt; \u0026lt;b\u0026gt; ... 中文版本的內容(your Chinese version content) ... \u0026lt;/b\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;lang-jp\u0026#34;\u0026gt; \u0026lt;b\u0026gt; ... 日本語の内容 ... \u0026lt;/b\u0026gt; \u0026lt;/div\u0026gt;  \n最初class=\u0026quot;lang-tw\u0026quot;の內容が表示されません(style=\u0026quot;display: none;\u0026quot;)\nclass=\u0026quot;lang-jp\u0026quot;の **(\u0026hellip;日本語の内容\u0026hellip;)**だけです。\n ... 中文版本的內容(your Chinese version content) ...    ... 日本語の内容 ...   2.レイアウト設定 2.1 jQuery設定 下記のHTMLをレイアウト設定の側にHTML/JavaScriptとして設置する、又はテーマの\u0026lt;head\u0026gt;\u0026lt;/head\u0026gt;の中にてもいいです、しかしHeaderの中にするはテーマを変えたらもう一度やり直す。\n1  \u0026lt;script src=\u0026#39;//code.jquery.com/jquery-2.1.4.min.js\u0026#39;\u0026gt;\u0026lt;/script\u0026gt;  \n表面配置:\r読み込み時導入\r\r\rテーマ変更:\rテーマのHeaderに追加\r\r\r参照  Blogger 加入中英版本切換的功能\n無料も多数！WordPressで多言語対応しているテーマ(Theme)を探す方法\n ","description":"Bloggerの多言語の設定方法","id":0,"section":"posts","tags":["multi-language","WordPress","jQuery"],"title":"Bloggerの多言語の設定方法","uri":"https://q2a3z.github.io/jp/posts/blogger_multilange/"},{"content":"前の頃一度Bloggerで多言語のブログをかきましたが、その書き方とメンテナンスは面倒なんです。\nその後Github.ioがhtmlやCSSなどで静的サイトを作れるのを見つけました。この静的サイトはブログやGithubのプロジェクトなど展示できますので、ここに移転します。\nそしてhexoやHugoなどサイト作成ツールを使ってMarkdownファイルでサイトを作れます。\nhexo vs Hugo 最初にhexoを使いました、それはHugoと同じのようでテーマを導入して、Markdownで静的サイトを作成できます。しかし、hexoは多言語に対応するのはi18nというツールが必要なんですが、作成したサイトはメインページの言語しか変更できません。もしくは2つ(以上)のhexoを使って、2つ(以上)の言語を作れます。その後Hugoを見つけました、hexoの方法の作り方とメンテナンスはとっても面倒だから、Hugoに変更しました。Hugoはhexoより多言語の変更はしやすいで、サイトの作り方とhugoは同じようでMarkdownを使います。\nHugoの設定 公式サイトの説明の通りに、下記には一部で記事します。\n1.gitをインストール Windows\rMacOS\rUbuntu\r\rWindows 10 gitの公式サイトより、インストーラーをダウンロードする。\r\rMacOS section Homebrewで下記のコマンドでインストールする。\nbrew install git\n\rUbuntu section Homebrewで下記のコマンドでインストールする。\nbrew install git\n\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"8611041887ef7b8d\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r 正しくインストールされているかとうか、下記のコマンドで確認します。\ngit --version\n正しくインストールされていたのはgitのバージョンを表示します。\n2.Hugoをインストール Windows\rMacOS\rUbuntu\r\rWindows 10 先にC:\\Hugo\\Sitesに公式GIthubのReleaseのページからhugo.exeを設置して、その後環境変数のPATHに上記のhugo.exeを追加します。\r\rMacOS section Homebrewで下記のコマンドでインストールする。\nbrew install hugo\r\n\rUbuntu section Homebrewで下記のコマンドでインストールする。\nbrew install hugo\n\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"711742808487f198\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r 正しくインストールされているかとうか、下記のコマンドで確認します。\nhugo version\n正しくインストールされていたのはgitのバージョンを表示します。\n3.初めてHugoを使う 公式スタートのガイド\n3.1サイトを作ろ hugo new site quickstart\nHugoでquickstart フォルダーにサイトを作ります\n3.2 Zzoテーマを導入 cd quickstart\rgit init\rgit clone https://github.com/zzossig/hugo-theme-zzo.git themes/zzo\rquickstart フォルダーに移動して、git で zzoテーマをthemesフォルダーにダウンロードします。\n3.3テスト 3.3.1 themes/zzo/exampleSiteの中のファイルをquickstart フォルダーにコピーして、下記のコマンドを実行します。\nhugo server\n3.3.2 又はexampleSiteをテストします。下記のコマンドを実行します。\nhugo server --themesDir themes/zzo/exampleSite\nその後ブラウザで\nhttp://localhost:1313/にアクセスして、テストサイトが見えます。\nGithubユーザサイト GithubはGithub Pageというサービスを提供しています，そこでユーザサイトとプロジェクトサイト設置できます。\n1.Github.ioの設定 先ず新たのリポジトリを作成します。\nGithub:\rリポジトリを作成する\r\r\r『Repository name』に必ず[username].github.ioを書きます。usernameは自分のアカウントです。\n2.アップロードサイト 先に言ったのquickstart のフォルダーにターミナルでコマンドhugoを実行して、publicというのサイトのフォルダーを作成します。\nその後gitでpublicフォルダーをアップロードします。\ngit init\rgit add .\rgit commit -m \u0026quot;first commit\u0026quot;\rgit remote add origin https://github.com/q2a3z/[username].github.io.git\rgit push -u origin master\rgithubコマンドの說明\n Hexo \u0026amp; NexT - 同時支援多語系\n如何使用Hugo在GitHub Pages上搭建免费个人网站\n ","description":"Hugoの使うとZzoテーマの多言語の設定方法","id":1,"section":"posts","tags":["multi-language","Zzo"],"title":"Hugoの設定方法","uri":"https://q2a3z.github.io/jp/posts/hugo_zzo_manul/"},{"content":" 私は台湾から来日のエンジニアです。\n最近学生時代からのプロジェクトや作成物を整理したいと思います、そしてブログで練習して、記事します。\nせっかく日本に来るなので、一応多言語で書いて、未来のポートフォリオにします。\nWrodPress.comとGoogleのBloggerなど無料のブログサイトを比べました。\nWrodPressはWrodPress.comとWrodPress.orgがあるんです。この二つはプラグインとテーマを導入できます。WrodPress.orgは無料で使えるんですが、ドメインとサーバーを契約せず利用できない。その代わりWrodPress.comでテーマやプラグインを導入するのは有償プランしか利用できない。\n今資料を整えるだけるんので、もし今後時間と金があれば、WordPressで自分のサイトを試したいと思います。\n最初にはBloggerを試して、日本語と中国語のマニュアルを書きました、\u0026ldquo;ここいる\u0026rdquo;。この書き方は本当に面倒で、書きつらいました。その後Github.ioのドメインを使って、サイトを作成できる。以上の原因でこのサイトが誕生した。\n ","description":"Hugo, the world’s fastest framework for building websites","id":2,"section":"","tags":null,"title":"プロファイル","uri":"https://q2a3z.github.io/jp/about/"}]