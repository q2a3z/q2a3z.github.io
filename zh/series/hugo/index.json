[{"content":"先前參考Unity 官方的教學實作了這個井字遊戲，但其只能用於雙人遊玩並沒有單人遊玩的模式。其後發現有一演算法是專門對於這種棋牌遊戲的就是MiniMax。\nMiniMax MiniMax演算法是利用於雙人遊戲的一種演算法。其利用於零和遊戲(Zero-sum Game)也就是你輸我贏或是你贏我輸的遊戲。\n其概念就如下圖1\nMiniMax: minimax的二元樹架構   假設自己為○(Max)，對手為Ｘ(Min)。並假設勝利時為1，敗北時為-1，平局時為0。不過由於井字遊戲的狀態樹算是很簡單的，所以可以將整個遊戲目前狀態底下所有結果的二元樹建構出來，一般如果像是其他如象棋、圍棋等結果較為龐大的遊戲是不可能這樣做。假設遊戲狀態如上圖所示，會依序把所有結果羅列出來，並將依其狀態回傳1、-1、0，回傳值只會於有結果時才會產生，所以如圖所示下一步為○，所以就須取最大值(Max)，反之在下一步為對方動作時則要取最小值(Min)。從勝利的結果反推回傳結果值。min和max分別為自己與對方動作時的情況。\n代碼 Minimax isMaximizing是用來判斷是否為自己的回合也就是對自己有利的情況**(取最大值Max)**。**else**則為對方的回合**(取最小值Min)**。重複遞迴值到看到結果為止。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  public int minimax(Text[] buttonList,int depth,bool isMaximizing){ string result = gameController.checkWinner(); if(result != \u0026#34;\u0026#34;){ return scores(result); } if(isMaximizing){ int bestScore = -1000; for(int i = 0; i \u0026lt; 9; i++){ if(buttonList[i].text == \u0026#34;\u0026#34;){ buttonList[i].text = \u0026#34;O\u0026#34;; int score = minimax(buttonList,(depth+1),false); buttonList[i].text = \u0026#34;\u0026#34;; if (score \u0026gt; bestScore) { bestScore = score; } } } return bestScore; } else{ int bestScore = 1000; for(int i = 0; i \u0026lt; 9; i++){ if(buttonList[i].text == \u0026#34;\u0026#34;){ buttonList[i].text = \u0026#34;X\u0026#34;; int score = minimax(buttonList,(depth+1),true); buttonList[i].text = \u0026#34;\u0026#34;; if (score \u0026lt; bestScore) { bestScore = score; } } } return bestScore; } }   scores 此為比賽結束時，是獲勝或是輸，又或是平手。並將結果值回傳。\n1 2 3 4 5 6 7 8  private int scores(string result){ if(result == \u0026#34;O\u0026#34;) return 10; else if(result == \u0026#34;X\u0026#34;) return -10; else return 0; }   Best Move bestMove就是最頂層的時候，會呼叫minimax來決定哪一步對自己有利。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  public void bestMove(){ // AI to make its turn  int bestScore = -65535; int move = 8; for(int i = 0; i \u0026lt; 9; i++){ if(buttonList[i].text == \u0026#34;\u0026#34;){ buttonList[i].text = \u0026#34;O\u0026#34;; int score = minimax(buttonList,0,false); buttonList[i].text = \u0026#34;\u0026#34;; if (score \u0026gt; bestScore) { bestScore = score; move = i; } } } buttonList[move].GetComponentInParent\u0026lt;Button\u0026gt;().interactable = false; buttonList[move].text = gameController.GetPlayerSide(); gameController.EndTurn(); }   結果  成果圖: 如minimax的二元樹架構一樣的結果   Unity程式碼Github\n Unity-Creating a Tic-Tac-Toe Game Using Only UI Components\nMinimax_wikipedia\nThe Minimax Algorithm\nZero-Sum Game\n  擷取自The Min Max Algorithm \u0026#x21a9;\u0026#xfe0e;\n   ","description":"將MiniMax應用於Unity的井字遊戲","id":0,"section":"posts","tags":["miniMax","AI"],"title":"於Unity應用MiniMax","uri":"https://q2a3z.github.io/zh/posts/unity_tic_minmax/"},{"content":"於關於我內有說明過，我曾經打算利用Blooger來寫多國語言部落格，但覺得寫的方法太麻煩了，因此改用Hugo來寫。\n原本有紀錄了一些資料順便轉移到這邊並測試一下結果。\nBlogger vs WordPress Blogger目前為Google提供的部落格網站，其可以導入Google廣告以及更改版面與套ˋ用JavaScript等等功能。WordPress有分為兩種免費的但需要自行架站的WrodPress.org以及網域免費但如果要套用其他功能與版面需要付費的WrodPress.com\n 主題: WrodPress的翻譯對應主題   Polylang: WrodPress.org的翻譯對應Plug-in   兩者比較\n   名稱 Blogger WordPress.com WordPress.org     收費 免費 免費*(要套用其他功能需訂閱) 免費   架站需求 無 無 要   多國語言 利用JavaScript 更改主題或是增加功能*(需訂閱) 更改主題或是增加功能    猶如先前提過的姑且先用Blogger來記錄，如後續有其他想法在嘗試WordPress。\nBlogger套用多國語言 1.內文設定 1.1按鈕設定 利用下方的HTML設置如下方黃底白字的按鈕，並套用toggle Button的功能˙。\n日本語 | 正體中文\n1 2 3 4 5 6 7 8 9  \u0026lt;a class=\u0026#34;lang-switch-button\u0026#34; href=\u0026#34;#\u0026#34; onclick=\u0026#34;$(\u0026amp;quot;.lang-jp\u0026amp;quot;).toggle(); $(\u0026amp;quot;.lang-tw\u0026amp;quot;).toggle();\u0026#34; style=\u0026#34;background-color: #ee9900; border-radius: 5px; color: white; font-weight: bold; padding: 5px 8px;\u0026#34;\u0026gt; 日本語 | 正體中文\u0026lt;/a\u0026gt;  \n1 2 3 4 5 6 7 8 9 10  \u0026lt;div class=\u0026#34;lang-tw\u0026#34; style=\u0026#34;display: none;\u0026#34;\u0026gt; \u0026lt;b\u0026gt; ... 中文版本的內容(your Chinese version content) ... \u0026lt;/b\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;lang-jp\u0026#34;\u0026gt; \u0026lt;b\u0026gt; ... 日本語の内容 ... \u0026lt;/b\u0026gt; \u0026lt;/div\u0026gt;  \n初始class=\u0026quot;lang-tw\u0026quot;的內容為不顯示(style=\u0026quot;display: none;\u0026quot;)\n只顯示class=\u0026quot;lang-jp\u0026quot;的 (\u0026hellip;日本語の内容\u0026hellip;)\n ... 中文版本的內容(your Chinese version content) ...    ... 日本語の内容 ...   2.版面設定 2.1 jQuery設定 將下方代碼增加至版面設置內並套用HTML/JavaScript亦或是將此代碼增加至版面的\u0026lt;head\u0026gt;\u0026lt;/head\u0026gt;標籤之內，但增加於Header內如果更換主題的話就要重新再更改一次。\n1  \u0026lt;script src=\u0026#39;//code.jquery.com/jquery-2.1.4.min.js\u0026#39;\u0026gt;\u0026lt;/script\u0026gt;  \n版面配置: 網頁讀取時即可套用   主題修改: 增加於主題的Header   參考  Blogger 加入中英版本切換的功能\n無料も多数！WordPressで多言語対応しているテーマ(Theme)を探す方法\n ","description":"Blogger多國語言導入方法","id":1,"section":"posts","tags":["multi-language","WordPress","jQuery"],"title":"Blogger多國語言導入方法","uri":"https://q2a3z.github.io/zh/posts/blogger_multilange/"},{"content":"身為一個代碼紀錄的部落格就會貼一些程式碼上來，而這些代碼是必要能夠跟我在coding的時候一樣分色顯示。Google 有提供開源的JavaScript code-prettify 可以利用。\n本篇會紀錄code-prettify的使用方法。\n參考  Google code-prettifyのBloggerへの導入方法\n ","description":"利用Google code-prettify讓Blogger內程式碼分色顯示","id":2,"section":"posts","tags":["multi-language","WordPress","jQuery"],"title":"Blogger程式碼分色顯示","uri":"https://q2a3z.github.io/zh/posts/blogger_code_color/"},{"content":"中間曾有用過Blogger發現要多國語言真的太繁瑣且不好維護。其後發現Github.io可以利用html，CSS等靜態內容來顯示專案或是個人Github資料，也可以把它弄成個人部落格。另外利用hexo，或Hugo套用主題就可以直接撰寫Markdown檔案來做網站。\nhexo vs Hugo 起初是有用另外一個hexo，其與Hugo一樣都可以利用Markdown語法套用別人設計好的主題就可以生成靜態網站。然而hexo如要實踐多國語言可另安裝i18n套件，但其只能在主頁面切換而已，無法在Po文內做切換。亦或是用兩套(以上)hexo分別產生兩個(以上)語言的版本，這樣後續維護非常繁瑣，因此後續又找了一些資料發現另一個套件Hugo，其對於多語言的對應相當方便，而且切換語言時能對應不同語言顯示。\nHugo設定 就如其官網說明的一樣。下面節錄部分安裝方法。\n1.安裝git Windows MacOS Ubuntu  Windows 10 至官網下載最新的git安裝檔  MacOS section 利用Homebrew直接下載安裝\nbrew install git\n Ubuntu section 利用Homebrew直接下載安裝\nbrew install git\n   'use strict'; var containerId = JSON.parse(\"\\\"e6690596d675c61d\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  安裝完成後於終端機輸入\ngit --version\n檢查是否有回傳版本訊息。\n2.安裝Hugo Windows MacOS Ubuntu  Windows 10 先至官方的GIthub下載最新的Release\n並設置一路徑如C:\\Hugo\\Sites放置剛下載的hugo.exe\n之後將此一路徑增加在環境變數PATH內  MacOS section 利用Homebrew直接下載安裝\nbrew install hugo\n Ubuntu section 利用Homebrew直接下載安裝\nbrew install hugo\n   'use strict'; var containerId = JSON.parse(\"\\\"3c22dbdf55628f10\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  安裝完成後於終端機輸入\nhugo version\n檢查是否有回傳版本訊息。\n3.開始使用Hugo 使用教學\n3.1創建網站 hugo new site quickstart\n創建一個新的 hugo 網誌於 quickstart 資料夾內\n3.2添加Zzo主題 cd quickstart git init git clone https://github.com/zzossig/hugo-theme-zzo.git themes/zzo 移動至quickstart內，利用git 將 zzo主題添加於themes資料夾內\n3.3測試 3.3.1 可以將themes/zzo/exampleSite內的檔案複製至網站的跟目錄下\n並執行hugo server\n3.3.2 亦或是直接針對exampleSite做測試\nhugo server --themesDir themes/zzo/exampleSite\n在瀏覽器輸入http://localhost:1313/就可以看到測試結果\nGithub個人頁面 Github提供一個Github Page的服務，可以放置一個自己的頁面以及多個專案說明網頁。\n1.Github.io設定 首先新增一個Github專案。\nGithub: 新增Github專案   專案名稱如要使用個人網站的話就必須命名為[username].github.io，username為你自己的帳號名稱。\n2.上傳網站 先於quickstart 資料夾內利用終端機輸入hugo產生一public資料夾。\n再利用終端機輸入下列git將hugo產生之public上傳。\ngit init git add . git commit -m \u0026quot;first commit\u0026quot; git remote add origin https://github.com/q2a3z/[username].github.io.git git push -u origin master github語法說明\n Hexo \u0026amp; NexT - 同時支援多語系\n如何使用Hugo在GitHub Pages上搭建免费个人网站\n ","description":"Hugo的使用以及Zzo主題設定及多國語言","id":3,"section":"posts","tags":["multi-language","Zzo"],"title":"Hugo的使用方法","uri":"https://q2a3z.github.io/zh/posts/hugo_zzo_manul/"},{"content":" 我是一個從台灣到日本打拼的工程師。\n最近想說把之前的做過的專案跟代碼做一下整理，並想開始使用Blog來做整理。\n想說是否能順便用在日本求職的PR裡，所以就萌生了撰寫多國語言版本的想法。\n雖然有看了WrodPress.com與Google的Blogger等免費的Blog上傳網站。\nWrodPress有分WrodPress.com與WrodPress.org兩者都有許多Pulg-In跟版面可以套用，WrodPress.org是可以直接套用，但是如果不自己架設網站的話只能利用WrodPress.com，就需要另外付費訂閱才能安裝Pulg-In跟版面。\n目前想說先整理一些資料，等後續有時間跟金錢的時候再架設Server來直接套用WordPress的第三方Pulg-In或版面。\n一開始有嘗試使用Blogger來做紀錄，教學在這邊，但是覺得這樣撰寫有點太累人了，後來發現原來可以利用Github.io的網域來撰寫部落格，因此就誕生出這個網站出來了。\n ","description":"Hugo, the world’s fastest framework for building websites","id":4,"section":"","tags":null,"title":"關於我","uri":"https://q2a3z.github.io/zh/about/"},{"content":" 我是一個從台灣到日本打拼的工程師。\n最近想說把之前的做過的專案跟代碼做一下整理，並想開始使用Blog來做整理。\n想說是否能順便用在日本求職的PR裡，所以就萌生了撰寫多國語言版本的想法。\n雖然有看了WrodPress.com與Google的Blogger等免費的Blog上傳網站。\nWrodPress有分WrodPress.com與WrodPress.org兩者都有許多Pulg-In跟版面可以套用，WrodPress.org是可以直接套用，但是如果不自己架設網站的話只能利用WrodPress.com，就需要另外付費訂閱才能安裝Pulg-In跟版面。\n目前想說先整理一些資料，等後續有時間跟金錢的時候再架設Server來直接套用WordPress的第三方Pulg-In或版面。\n一開始有嘗試使用Blogger來做紀錄，教學在這邊，但是覺得這樣撰寫有點太累人了，後來發現原來可以利用Github.io的網域來撰寫部落格，因此就誕生出這個網站出來了。\n ","description":"Hugo, the world’s fastest framework for building websites","id":5,"section":"zh","tags":null,"title":"關於我","uri":"https://q2a3z.github.io/zh/zh/about/"}]